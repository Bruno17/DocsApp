{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/prismjs/components/prism-markup.js","webpack:///./node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","console","log","global","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","toString","slice","objId","obj","clone","deepClone","visited","id","forEach","v","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","propertyType","plugins","highlightAll","async","highlightAllUnder","document","container","env","selector","hooks","run","element","elements","querySelectorAll","highlightElement","language","parent","test","className","parentNode","match","toLowerCase","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","length","pattern","lookbehind","greedy","lookbehindLength","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","len","delNum","after","args","push","wrapped","splice","apply","rest","all","add","callbacks","matchedStr","join","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","g","Function","e","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","xml","html","mathml","svg","NEW_LINE_EXP","_resizeElement","whiteSpace","getStyles","codeElement","querySelector","lineNumbersWrapper","lineNumberSizer","codeLines","split","createElement","appendChild","style","display","line","lineNumber","lineSize","getBoundingClientRect","height","children","getComputedStyle","currentStyle","pre","addLineNumbers","lineNumbersRegex","linesNum","lines","setAttribute","counterReset","parseInt","getAttribute","lineNumbers","getLine","number","classList","contains","lineNumberRows","lineNumberStart","lineNumberEnd","lineIndex"],"mappings":"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","file":"main-modern.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Prism from 'prismjs';\n\nconsole.log('hello world');\n","var _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tvar insertHighlightedCode = function (highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","Prism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n","(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\t/**\n\t * Plugin name which is used as a class name for <pre> which is activating the plugin\n\t * @type {String}\n\t */\n\tvar PLUGIN_NAME = 'line-numbers';\n\n\t/**\n\t * Regular expression used for determining line breaks\n\t * @type {RegExp}\n\t */\n\tvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n\t/**\n\t * Resizes line numbers spans according to height of line of code\n\t * @param {Element} element <pre> element\n\t */\n\tvar _resizeElement = function (element) {\n\t\tvar codeStyles = getStyles(element);\n\t\tvar whiteSpace = codeStyles['white-space'];\n\n\t\tif (whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line') {\n\t\t\tvar codeElement = element.querySelector('code');\n\t\t\tvar lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\t\t\tvar lineNumberSizer = element.querySelector('.line-numbers-sizer');\n\t\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n\t\t\tif (!lineNumberSizer) {\n\t\t\t\tlineNumberSizer = document.createElement('span');\n\t\t\t\tlineNumberSizer.className = 'line-numbers-sizer';\n\n\t\t\t\tcodeElement.appendChild(lineNumberSizer);\n\t\t\t}\n\n\t\t\tlineNumberSizer.style.display = 'block';\n\n\t\t\tcodeLines.forEach(function (line, lineNumber) {\n\t\t\t\tlineNumberSizer.textContent = line || '\\n';\n\t\t\t\tvar lineSize = lineNumberSizer.getBoundingClientRect().height;\n\t\t\t\tlineNumbersWrapper.children[lineNumber].style.height = lineSize + 'px';\n\t\t\t});\n\n\t\t\tlineNumberSizer.textContent = '';\n\t\t\tlineNumberSizer.style.display = 'none';\n\t\t}\n\t};\n\n\t/**\n\t * Returns style declarations for the element\n\t * @param {Element} element\n\t */\n\tvar getStyles = function (element) {\n\t\tif (!element) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n\t};\n\n\twindow.addEventListener('resize', function () {\n\t\tArray.prototype.forEach.call(document.querySelectorAll('pre.' + PLUGIN_NAME), _resizeElement);\n\t});\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tif (!env.code) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar code = env.element;\n\t\tvar pre = code.parentNode;\n\n\t\t// works only for <code> wrapped inside <pre> (not inline)\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if line numbers already exists\n\t\tif (code.querySelector('.line-numbers-rows')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar addLineNumbers = false;\n\t\tvar lineNumbersRegex = /(?:^|\\s)line-numbers(?:\\s|$)/;\n\n\t\tfor (var element = code; element; element = element.parentNode) {\n\t\t\tif (lineNumbersRegex.test(element.className)) {\n\t\t\t\taddLineNumbers = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\t\tif (!addLineNumbers) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the class 'line-numbers' from the <code>\n\t\tcode.className = code.className.replace(lineNumbersRegex, ' ');\n\t\t// Add the class 'line-numbers' to the <pre>\n\t\tif (!lineNumbersRegex.test(pre.className)) {\n\t\t\tpre.className += ' line-numbers';\n\t\t}\n\n\t\tvar match = env.code.match(NEW_LINE_EXP);\n\t\tvar linesNum = match ? match.length + 1 : 1;\n\t\tvar lineNumbersWrapper;\n\n\t\tvar lines = new Array(linesNum + 1).join('<span></span>');\n\n\t\tlineNumbersWrapper = document.createElement('span');\n\t\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\n\t\tlineNumbersWrapper.className = 'line-numbers-rows';\n\t\tlineNumbersWrapper.innerHTML = lines;\n\n\t\tif (pre.hasAttribute('data-start')) {\n\t\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t\t}\n\n\t\tenv.element.appendChild(lineNumbersWrapper);\n\n\t\t_resizeElement(pre);\n\n\t\tPrism.hooks.run('line-numbers', env);\n\t});\n\n\tPrism.hooks.add('line-numbers', function (env) {\n\t\tenv.plugins = env.plugins || {};\n\t\tenv.plugins.lineNumbers = true;\n\t});\n\n\t/**\n\t * Global exports\n\t */\n\tPrism.plugins.lineNumbers = {\n\t\t/**\n\t\t * Get node for provided line number\n\t\t * @param {Element} element pre element\n\t\t * @param {Number} number line number\n\t\t * @return {Element|undefined}\n\t\t */\n\t\tgetLine: function (element, number) {\n\t\t\tif (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lineNumberRows = element.querySelector('.line-numbers-rows');\n\t\t\tvar lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n\t\t\tvar lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n\t\t\tif (number < lineNumberStart) {\n\t\t\t\tnumber = lineNumberStart;\n\t\t\t}\n\t\t\tif (number > lineNumberEnd) {\n\t\t\t\tnumber = lineNumberEnd;\n\t\t\t}\n\n\t\t\tvar lineIndex = number - lineNumberStart;\n\n\t\t\treturn lineNumberRows.children[lineIndex];\n\t\t}\n\t};\n\n}());\n"],"sourceRoot":""}